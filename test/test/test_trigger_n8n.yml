# Index to search, wildcard supported
name: Sudo Command Enumeration Detected
query_string: 'process.name: "sudo" AND  process.args : "-l" AND event.action: process_started'

# Alert on each event: Any, Blacklist, Whitelist, Change, Frequency, Spike, Flatline, NewTerm, Cardinality,...
type: any

# A list of elasticsearch filters used for find events
# These filters are joined with AND and nested in a filtered query
# For more info: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html
filter:
- query:
    query_string:
      query: $query_string$

index: g1-hq-onprem-linux-*

# When the attacker continues, send a new alert after x minutes
realert:
  minutes: 1

# Specify your services here
alert:
  - debug
  - post

# Alert body only cointains a title and text
alert_text_type: alert_text_only

alert_subject_args:
  - host.name
alert_subject: "Attack on <{}> of type Discovery"

alert_text_args:
  - host.name
  - user.name
  - host.ip[0]
alert_text: |-
  An attack on {} is detected.
  The server looks like:
  Username: {}
  Server: {}

#http_post_url: "https://n8n.galaxy.one/webhook/rule-matching-handler"
http_post_url: "https://n8n.galaxy.one/webhook-test/rule-matching-handler"
http_post_ignore_ssl_errors: True
http_post_payload:
  hostname: host.name
  username: user.name
  ip_address: host.ip[0]
http_post_static_payload:
  title: $name$
  description: "This rule monitors for the usage of the sudo -l command, which is used to list the allowed and forbidden commands for the invoking user. Attackers may execute this command to enumerate commands allowed to be executed with sudo permissions, potentially allowing to escalate privileges to root."
  type: elastalert
  source: GalaxyOne
  tags: ["OS: Linux", "Use Case: Threat Detection", "Tactic: Discovery"]
  product: elastalert-g1
http_post_headers:
  Elastalert-Token: __n8n_BLANK_VALUE_e5362baf-c777-4d57-a609-6eaf1f9e87f6

# Enhancement for converting 'detections' array into object, ex. get merged detection type by  
# 'detections_parsed.type' or get first detection type by 'detection_parsed.0.type' 
# match_enhancements:   
# - "elastalert_modules.<>"   
