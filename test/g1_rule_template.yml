# Index to search, wildcard supported
name: <Name rule> 
query_string: ""

# Alert on each event: Any, Blacklist, Whitelist, Change, Frequency, Spike, Flatline, NewTerm, Cardinality,...
type: any

# A list of elasticsearch filters used for find events
# These filters are joined with AND and nested in a filtered query
# For more info: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html
filter:
- query:
    query_string:
      query: $query_string$

index: bitsensor-detections-*

# When the attacker continues, send a new alert after x minutes
realert:
  minutes: 1

# Specify your services here
alert:
  - debug
  - ms-teams
  # - thehive

# Alert body only cointains a title and text
alert_text_type: alert_text_only

alert_subject_args:
  - endpoint.name
  - detections_parsed.type
alert_subject: "Attack on <{}> of type {}"

alert_text_args:
  - endpoint.name
  - detections_parsed.ip
  - detections_parsed.ua
alert_text: |-
  An attack on {} is detected.
  The attacker looks like:
  IP: {}
  User-Agent: {}

# thehive config alerting
hive_connection:
  hive_host: http://192.168.68.144
  hive_port: 9000
  hive_apikey: AChKYLb5AEx40WVuZFTnoVAou5oBwm19

hive_alert_config:
  follow: True
  severity: 1   # Alert's severity: 1, 2, 3, 4 for LOW, MEDIUM, HIGH, CRTICAL
  status: 'New'
  source: "GalaxyOne"
  description: "This rule monitors for the usage of the sudo -l command, which is used to list the allowed and forbidden commands for the invoking user. Attackers may execute this command to enumerate commands allowed to be executed with sudo permissions, potentially allowing to escalate privileges to root."
  tags: [ "OS: Linux", "Use Case: Threat Detection", "Tactic: Discovery" ]
  title: $name$
  tlp: 2  # Alert's TLP: 0, 1, 2, 3 for WHITE, GREEN, AMBER, RED
  type: 'elastalert'

hive_observable_data_mapping:
  - ip: host.ip[0]
    tlp: 1
    tags: [ "OS: Linux", "Tactic: Discovery" ]
    message: 'IP address'
# Enhancement for converting 'detections' array into object, ex. get merged detection type by  
# 'detections_parsed.type' or get first detection type by 'detection_parsed.0.type' 
# match_enhancements:   
# - "elastalert_modules.<>"   
